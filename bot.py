"""
–≠—Ö–æ-–±–æ—Ç —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏.
–ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GIF-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç.
"""

import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ContentType

from profanity_filter import contains_profanity
from gif_service import get_gif_url

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help
    """
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–Ø —ç—Ö–æ-–±–æ—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏.\n"
                       "–ï—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞, —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ GIF.")

@dp.message_handler(content_types=ContentType.TEXT)
async def echo_message(message: types.Message):
    """
    –≠—Ö–æ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GIF
    """
    text = message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏
    if contains_profanity(text):
        # –ü–æ–ª—É—á–∞–µ–º URL GIF –∏–∑ API
        gif_url = await get_gif_url()

        if gif_url:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–æ–π
            await message.reply_animation(
                animation=gif_url,
                caption="–û–π-–æ–π, –∫–∞–∂–µ—Ç—Å—è, –≤–∞—à —Ä–æ—Ç–∏–∫ –Ω–µ–º–Ω–æ–∂–∫–æ üí© –∑–∞—Å–æ—Ä–∏–ª—Å—è!"
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å GIF, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply("–û–π-–æ–π, –∫–∞–∂–µ—Ç—Å—è, –≤–∞—à —Ä–æ—Ç–∏–∫ –Ω–µ–º–Ω–æ–∂–∫–æ üí© –∑–∞—Å–æ—Ä–∏–ª—Å—è!")
    else:
        # –≠—Ö–æ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await message.answer(text)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)